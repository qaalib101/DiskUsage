<div class="container">
    <div class="jumbotron">
        <h1>Welcome to {{title}}</h1>
    </div>
</div>
<script id="donutchart" type="text/x-handlebars-template">
    {{piechart}}
</script>
<div id="result" style="width: 900px; height: 500px;">

</div>
Total disk space: {{disk.total}} bytes
<br>
Total disk used: {{disk.used}} bytes
<br>
Total disk free: {{disk.free}} bytes
<br>
<input class="btn-default" type="file" id="FileUpload" onchange="listFiles(event)" webkitdirectory mozdirectory msdirectory odirectory directory multiple />
<script id="barchart" type="text/x-handlebars-template">
    {{barchart}}
</script>
<div id="barResult" style="width: 900px; height: 500px;">

</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
<script src="handlebars-v4.0.12.js"></script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">
    google.charts.load("current", {packages:["corechart", "bar"]});
    google.charts.setOnLoadCallback(drawChart);
    function drawChart() {
        $.get('/getDiskData', function(diskData){
            if(diskData){
                let free = diskData.free - 0;
                let used = diskData.used - 0;
                var data = google.visualization.arrayToDataTable([
                    ['Storage', 'Disk Usage'],
                    ['Empty',     free],
                    ['Used',      used]
                ]);

                var options = {
                    title: 'Total Disk Storage',
                    pieHole: 0.4,
                };
                var chart = new google.visualization.PieChart(document.getElementById('result'));
                var source   = document.getElementById('donutchart').innerHTML;
                var template = Handlebars.compile(source);
                var context = {piechart: chart};
                var html    = template(context);
                console.dir(html);
                document.getElementById('result').innerHTML = html;
                chart.draw(data, options);
            }else{
                alert("No data has been recieved");
            }
        });
    }
    function folderChart(files){
        var data = google.visualization.arrayToDataTable([
            ["File Name", "File Size"],
            [files[0].name, files[0].size],
            [files[1].name, files[1].size],
            [files[2].name, files[2].size],
            [files[3].name, files[3].size]
        ]);

        var options = {
            title: 'Top ten files by size in directory',
            hAxis: {
                title: 'Time of Day',
                format: 'h:mm a',
                viewWindow: {
                    min: [7, 30, 0],
                    max: [17, 30, 0]
                }
            },
            vAxis: {
                title: 'Rating (scale of 1-10)'
            },
            width: 600,
            height: 400,
            bar: {groupWidth: "95%"},
            legend: { position: "none" }
        };

        var chart = new google.visualization.ColumnChart(document.getElementById('barResult'));


        var source   = document.getElementById('barchart').innerHTML;
        var template = Handlebars.compile(source);
        var context = {barchart: chart};
        var html    = template(context);
        document.getElementById('barResult').innerHTML = html;
        chart.draw(data, options);
    }
    function listFiles(event) {
        var files = [];
        var theFiles = event.target.files;
        for (var i = 0; i < theFiles.length; i++) {
            files[i] = {
                name: theFiles[i].name,
                size: theFiles[i].size,
                date: theFiles[i].lastModifiedDate
            }
        }
        var topFiles = [];
        for( i=0; i<10; i++){
            var files2 = files.concat();
            var res = Math.max.apply(Math,files2.map(function(o){return o.size;}));
            var obj = files.find(o => o.size === res);
            topFiles[i] = obj;
            files.splice(files.indexOf(obj), 1);
        }
        console.log(topFiles);
        google.charts.setOnLoadCallback(folderChart(topFiles));
    }
</script>
